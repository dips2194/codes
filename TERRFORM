provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "default" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "public" {
  vpc_id = aws_vpc.default.id
  cidr_block = "10.0.0.0/24"
  availability_zone = "us-east-1a"
}

resource "aws_subnet" "private" {
  vpc_id = aws_vpc.default.id
  cidr_block = "10.0.1.0/24"
  availability_zone = "us-east-1b"
}

resource "aws_security_group" "public" {
  name = "public-sg"
  ingress {
    protocol = "tcp"
    port = 80
    from_port = 80
    to_port = 80
   cidrs = ["0.0.0.0/0"]
  }
}

resource "aws_security_group" "private" {
  name = "private-sg"
  ingress {
    protocol = "tcp"
    port = 80
    from_port = 80
    to_port = 80
    source_security_group_id = aws_security_group.public.id
  }
}

resource "aws_instance" "web1" {
  ami = "ami-000000000000"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.public.id
  security_groups = [aws_security_group.public.id]
}

resource "aws_instance" "web2" {
  ami = "ami-000000000000"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.public.id
  security_groups = [aws_security_group.public.id]
}

resource "aws_elb" "default" {
  name = "default"
  subnets = [aws_subnet.public.id, aws_subnet.public.id]
  security_groups = [aws_security_group.public.id]
}

resource "aws_elb_target_group" "web" {
  name = "web"
  port = 80
  protocol = "HTTP"
  health_check_interval_seconds = 30
  healthy_threshold_count = 2
  unhealthy_threshold_count = 5
  target_type = "instance"
  targets = [
    {
      instance_id = aws_instance.web1.id
    },
    {
      instance_id = aws_instance.web2.id
    }
  ]
}

resource "aws_elb_listener" "default" {
  load_balancer_arn = aws_elb.default.arn
  port = 80
  protocol = "HTTP"
  target_group_arn = aws_elb_target_group.web.arn
}

output "public_ip_address_web1" {
  value = aws_instance.web1.public_ip
}

output "public_ip_address_web2" {
  value = aws_instance.web2.public_ip
}

output "load_balancer_dns_name" {
  value = aws_elb.default.dns_name
}
